---
const cases = [
  {
    name: '中華レストラン「龍的厨房」様',
    category: 'レストラン',
    before: '古いサイトで魅力が伝わらず、予約も電話のみだった。',
    after: 'デザイン刷新とWeb予約導入で、20代〜30代の新規顧客と予約数が1.5倍に！',
    image: 'https://images.unsplash.com/photo-1579684385127-6f724e8a5c3d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    metrics: [
      { label: '予約数', value: '+150%', icon: '📈' },
      { label: '新規顧客', value: '+200%', icon: '👥' },
      { label: 'PV数', value: '+300%', icon: '👀' }
    ]
  },
  {
    name: 'タイ式サロン「Sabai Spa」様',
    category: 'サロン・スパ',
    before: 'SNSのみで集客していたが、信頼性に欠けていた。',
    after: 'プロフェッショナルなサイトで信頼度アップ。Google検索からの予約が月30件増加！',
    image: 'https://images.unsplash.com/photo-1544161515-cfd636dc42e5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    metrics: [
      { label: 'Google予約', value: '+30件/月', icon: '🔍' },
      { label: '信頼度', value: '+85%', icon: '⭐' },
      { label: '売上', value: '+120%', icon: '💰' }
    ]
  },
  {
    name: 'ベトナムカフェ「Pho & Coffee」様',
    category: 'カフェ・飲食',
    before: 'メニューが伝わりにくく、リピーターが少なかった。',
    after: 'ビジュアル重視のデザインで料理の魅力を訴求。リピート率が40%向上！',
    image: 'https://images.unsplash.com/photo-1559925393-538048a10e97?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    metrics: [
      { label: 'リピート率', value: '+40%', icon: '🔄' },
      { label: '滞在時間', value: '+60%', icon: '⏱️' },
      { label: '注文単価', value: '+25%', icon: '💴' }
    ]
  },
  {
    name: 'インド料理「Spice Garden」様',
    category: 'レストラン',
    before: '多言語対応ができておらず、外国人観光客を取り込めていなかった。',
    after: '英語・中国語対応で国際的な集客を実現。売上が2倍に成長！',
    image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    metrics: [
      { label: '外国人客', value: '+250%', icon: '🌍' },
      { label: '売上', value: '+200%', icon: '📊' },
      { label: '口コミ', value: '+180%', icon: '💬' }
    ]
  },
  {
    name: 'ネイルサロン「Nail Art Tokyo」様',
    category: 'サロン・美容',
    before: 'Instagram頼みで予約管理が大変だった。',
    after: 'オンライン予約システムで効率化。顧客満足度と売上が大幅向上！',
    image: 'https://images.unsplash.com/photo-1604654894610-df63bc536371?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80',
    metrics: [
      { label: '予約効率', value: '+300%', icon: '⚡' },
      { label: '顧客満足度', value: '+95%', icon: '😊' },
      { label: '月間売上', value: '+180%', icon: '💎' }
    ]
  }
];
---

<section class="py-20 bg-gradient-to-br from-primary via-primary-light to-background-dark text-white relative overflow-hidden" id="cases">
  <!-- Background Elements -->
  <div class="absolute inset-0">
    <div class="absolute top-20 left-10 w-40 h-40 bg-accent/10 rounded-full animate-float"></div>
    <div class="absolute bottom-20 right-10 w-32 h-32 bg-accent-warm/10 rounded-lg rotate-45 animate-pulse-slow"></div>
    <div class="absolute top-1/2 left-1/4 w-24 h-24 bg-accent-neon/10 rounded-full animate-float" style="animation-delay: 2s;"></div>
  </div>

  <div class="container mx-auto px-6 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-6xl font-display font-black mb-6 animate-fade-in-down">
        私たちの<span class="bg-gradient-to-r from-accent to-accent-warm bg-clip-text text-transparent">デザインと成果</span>をご覧ください
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto animate-fade-in-up">
        実際のお客様の声と具体的な成果をご紹介します。あなたのビジネスも同じような成功を手に入れませんか？
      </p>
    </div>

    <!-- Case Studies Carousel -->
    <div class="relative max-w-7xl mx-auto">
      <!-- Desktop View (3 columns) -->
      <div class="hidden lg:block">
        <div id="desktop-carousel" class="grid grid-cols-3 gap-8 transition-transform duration-500 ease-in-out">
          {cases.map((caseStudy, index) => (
            <div class="case-card bg-white/10 backdrop-blur-md rounded-3xl overflow-hidden shadow-2xl hover:shadow-neon transition-all duration-500 transform hover:-translate-y-2 animate-fade-in-up" style={`animation-delay: ${index * 0.2}s`}>
              <!-- Image -->
              <div class="relative overflow-hidden">
                <img src={caseStudy.image} alt={caseStudy.name} class="w-full h-48 object-cover transition-transform duration-500 hover:scale-110">
                <div class="absolute top-4 left-4 px-3 py-1 bg-accent/90 text-white text-sm font-bold rounded-full">
                  {caseStudy.category}
                </div>
              </div>

              <!-- Content -->
              <div class="p-6">
                <h3 class="text-xl font-bold mb-4 text-accent">{caseStudy.name}</h3>
                
                <!-- Before/After -->
                <div class="space-y-4 mb-6">
                  <div>
                    <p class="text-xs font-semibold text-red-300 mb-2 uppercase tracking-wider flex items-center">
                      <span class="w-2 h-2 bg-red-400 rounded-full mr-2"></span>
                      Before (課題)
                    </p>
                    <p class="text-gray-300 text-sm leading-relaxed">{caseStudy.before}</p>
                  </div>
                  <div>
                    <p class="text-xs font-semibold text-green-300 mb-2 uppercase tracking-wider flex items-center">
                      <span class="w-2 h-2 bg-green-400 rounded-full mr-2"></span>
                      After (成果)
                    </p>
                    <p class="text-gray-300 text-sm leading-relaxed">{caseStudy.after}</p>
                  </div>
                </div>

                <!-- Metrics -->
                <div class="grid grid-cols-3 gap-2">
                  {caseStudy.metrics.map((metric) => (
                    <div class="text-center p-2 bg-white/5 rounded-lg">
                      <div class="text-lg mb-1">{metric.icon}</div>
                      <div class="text-accent font-bold text-sm">{metric.value}</div>
                      <div class="text-gray-400 text-xs">{metric.label}</div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Mobile/Tablet View (Carousel) -->
      <div class="lg:hidden">
        <div id="mobile-carousel" class="relative">
          <div class="overflow-hidden">
            <div id="carousel-track" class="flex transition-transform duration-500 ease-in-out">
              {cases.map((caseStudy, index) => (
                <div class="w-full md:w-1/2 flex-shrink-0 px-4">
                  <div class="case-card bg-white/10 backdrop-blur-md rounded-3xl overflow-hidden shadow-2xl">
                    <!-- Image -->
                    <div class="relative overflow-hidden">
                      <img src={caseStudy.image} alt={caseStudy.name} class="w-full h-48 object-cover">
                      <div class="absolute top-4 left-4 px-3 py-1 bg-accent/90 text-white text-sm font-bold rounded-full">
                        {caseStudy.category}
                      </div>
                    </div>

                    <!-- Content -->
                    <div class="p-6">
                      <h3 class="text-xl font-bold mb-4 text-accent">{caseStudy.name}</h3>
                      
                      <!-- Before/After -->
                      <div class="space-y-4 mb-6">
                        <div>
                          <p class="text-xs font-semibold text-red-300 mb-2 uppercase tracking-wider flex items-center">
                            <span class="w-2 h-2 bg-red-400 rounded-full mr-2"></span>
                            Before (課題)
                          </p>
                          <p class="text-gray-300 text-sm leading-relaxed">{caseStudy.before}</p>
                        </div>
                        <div>
                          <p class="text-xs font-semibold text-green-300 mb-2 uppercase tracking-wider flex items-center">
                            <span class="w-2 h-2 bg-green-400 rounded-full mr-2"></span>
                            After (成果)
                          </p>
                          <p class="text-gray-300 text-sm leading-relaxed">{caseStudy.after}</p>
                        </div>
                      </div>

                      <!-- Metrics -->
                      <div class="grid grid-cols-3 gap-2">
                        {caseStudy.metrics.map((metric) => (
                          <div class="text-center p-2 bg-white/5 rounded-lg">
                            <div class="text-lg mb-1">{metric.icon}</div>
                            <div class="text-accent font-bold text-sm">{metric.value}</div>
                            <div class="text-gray-400 text-xs">{metric.label}</div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <!-- Navigation Buttons -->
          <button id="prev-btn" class="absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-4 w-12 h-12 bg-accent/80 hover:bg-accent text-white rounded-full flex items-center justify-center transition-all duration-300 hover:scale-110 shadow-lg">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </button>
          <button id="next-btn" class="absolute right-0 top-1/2 transform -translate-y-1/2 translate-x-4 w-12 h-12 bg-accent/80 hover:bg-accent text-white rounded-full flex items-center justify-center transition-all duration-300 hover:scale-110 shadow-lg">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </button>

          <!-- Dots Indicator -->
          <div class="flex justify-center mt-8 space-x-2">
            {cases.map((_, index) => (
              <button class={`dot w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-accent' : 'bg-white/30'}`} data-index={index}></button>
            ))}
          </div>
        </div>
      </div>
    </div>

    <!-- Bottom CTA -->
    <div class="text-center mt-16 animate-fade-in-up">
      <p class="text-lg text-gray-300 mb-6">
        あなたのビジネスも同じような成功を手に入れませんか？
      </p>
      <a href="#contact" 
         class="inline-block px-12 py-4 bg-gradient-to-r from-accent to-accent-warm text-white font-bold text-lg rounded-2xl 
                hover:shadow-neon hover:scale-105 transition-all duration-300 transform">
        他の制作事例も見る
      </a>
    </div>
  </div>
</section>

<script>
  // Mobile Carousel Functionality
  let currentSlide = 0;
  const totalSlides = document.querySelectorAll('#carousel-track > div').length;
  const track = document.getElementById('carousel-track');
  const dots = document.querySelectorAll('.dot');
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');

  function updateCarousel() {
    if (track) {
      const slideWidth = window.innerWidth >= 768 ? 50 : 100; // 50% for tablet, 100% for mobile
      track.style.transform = `translateX(-${currentSlide * slideWidth}%)`;
    }
    
    // Update dots
    dots.forEach((dot, index) => {
      dot.classList.toggle('bg-accent', index === currentSlide);
      dot.classList.toggle('bg-white/30', index !== currentSlide);
    });
  }

  function nextSlide() {
    const maxSlides = window.innerWidth >= 768 ? totalSlides - 2 : totalSlides - 1;
    currentSlide = currentSlide >= maxSlides ? 0 : currentSlide + 1;
    updateCarousel();
  }

  function prevSlide() {
    const maxSlides = window.innerWidth >= 768 ? totalSlides - 2 : totalSlides - 1;
    currentSlide = currentSlide <= 0 ? maxSlides : currentSlide - 1;
    updateCarousel();
  }

  // Event Listeners
  if (nextBtn) nextBtn.addEventListener('click', nextSlide);
  if (prevBtn) prevBtn.addEventListener('click', prevSlide);

  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      currentSlide = index;
      updateCarousel();
    });
  });

  // Auto-play
  setInterval(nextSlide, 5000);

  // Handle resize
  window.addEventListener('resize', updateCarousel);

  // Touch/Swipe support
  let startX = 0;
  let endX = 0;

  if (track) {
    track.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
    });

    track.addEventListener('touchend', (e) => {
      endX = e.changedTouches[0].clientX;
      const diff = startX - endX;
      
      if (Math.abs(diff) > 50) { // Minimum swipe distance
        if (diff > 0) {
          nextSlide();
        } else {
          prevSlide();
        }
      }
    });
  }
</script>
